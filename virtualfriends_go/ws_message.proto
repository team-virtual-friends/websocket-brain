syntax = "proto3";

option go_package = "./virtualfriends_go";

package virtualfriends_proto;

// Next tag: 5
enum RuntimeEnv {
    RuntimeEnv_Invalid = 0;

    RuntimeEnv_Webpage_Desktop = 1;

    RuntimeEnv_Webpage_Mobile = 2;

    RuntimeEnv_IOS = 3;

    RuntimeEnv_Android = 4;
}

// Next tag: 16
message VfRequest {
    reserved 1;

    oneof request {
        EchoRequest echo = 2;

        StreamReplyMessageRequest stream_reply_message = 6;

        DownloadAssetBundleRequest download_asset_bundle = 7;

        DownloadBlobRequest download_blob = 9;

        GetCharacterRequest get_character = 13;

        AccumulateVoiceMessageRequest accumulate_voice_message = 15;
    }

    string ip_addr = 8;

    string username = 10;

    string user_id = 11;

    string session_id = 12;

    RuntimeEnv runtime_env = 14;
}

// Next tag: 11
message VfResponse {
    CustomError error = 1;

    oneof response {
        EchoResponse echo = 2;

        StreamReplyMessageResponse stream_reply_message = 6;

        DownloadAssetBundleResponse download_asset_bundle = 7;

        DownloadBlobResponse download_blob = 8;

        GetCharacterResponse get_character = 9;

        AccumulateVoiceMessageResponse accumulate_voice_message = 10;
    }
}

// Next tag: 2
message CustomError {
    string error_message = 1;
}

// Next tag: 3
message EchoRequest {
    string text = 1;

    VoiceConfig voice_config = 2;
}

// Next tag: 5
message EchoResponse {
    string text = 1;
    
    string action = 2;

    string sentiment = 3;

    bytes reply_wav = 4;
}

// Next tag: 3
enum VoiceType {
    VoiceType_Invalid = 0;

    VoiceType_NormalMale = 1;

    VoiceType_NormalFemale1 = 2;
    VoiceType_NormalFemale2 = 3;

    VoiceType_Orc = 4;
}

// Next tag: 3
enum Gender {
    Gender_Invalid = 0;

    Gender_Male = 1;

    Gender_Female = 2;
}

// Next tag: 4
message VoiceConfig {
    VoiceType voice_type = 1;

    float octaves = 2;

    string eleven_lab_id = 3;
}

// MirroredContent contains the content that is copied from request to response.
// Next tag: 5
message MirroredContent {
    string character_name = 1;

    int64 message_id = 2;

    string character_id = 3;
    
    string viewer_user_id = 4;
}

// Next tag: 11
message StreamReplyMessageRequest {
    MirroredContent mirrored_content = 1;
    
    repeated string json_messages = 2;

    // base_prompts is the prompts that is created by the owner, stored in the DB, and passed to client
    // in GetCharacter request.
    // custom_prompts is the prompts that client overwrite through the custom prompts window.
    // custom_prompts will override base_prompts if it's not empty.
    string base_prompts = 8;
    string custom_prompts = 7;

    string character_description = 9;

    oneof current_message {
        bytes wav = 3;

        string text = 6;

        // use the accumulated message from the previous AccumulateVoiceMessageRequests.
        bool use_accumulated = 10;
    }

    VoiceConfig voice_config = 5; 
}

// Next tag: 10
message StreamReplyMessageResponse {
    MirroredContent mirrored_content = 6;

    string reply_message = 1;

    string action = 2;

    string sentiment = 3;

    bytes reply_wav = 4;

    // will be omitted except the first one.
    string transcribed_text = 5;

    int32 chunk_index = 7;

    bool is_stop = 8;
}

// Next tag: 4
// [Deprecated, use DownloadBlobRequest]
message DownloadAssetBundleRequest {
    option deprecated = true;

    string publisher_name = 1;

    string character_name = 2;

    string runtime_platform = 3;
}

// Next tag: 4
// [Deprecated, use DownloadBlobResponse]
message DownloadAssetBundleResponse {
    option deprecated = true;

    bytes chunk = 1;

    int32 index = 2;

    int32 total_count = 3;
}

// Next tag: 4
message MirroredBlobInfo {
    string blob_name = 1;

    int32 major_version = 2;
    int32 minor_version = 3;
}

// Next tag: 2
message DownloadBlobRequest {
    MirroredBlobInfo mirrored_blob_info = 1;
}

// Next tag: 5
message DownloadBlobResponse {
    MirroredBlobInfo mirrored_blob_info = 1;

    bytes chunk = 2;

    int32 index = 3;

    int32 total_count = 4;
}

// Next tag: 2
message LoaderReadyPlayerMe {
    string avatar_url = 1;
}
// Next tag: 3
message LoaderBlobDownload {
    string blob_name = 1;

    string in_bundle_object_name = 2;
}
// Next tag: 2
message LoaderAvaturn {
    string avatar_url = 1;
}

// Next tag: 2
message GetCharacterRequest {
    string character_id = 1;
}

// Next tag: 12
message GetCharacterResponse {
    string generated_session_id = 10;

    oneof loader_config {
        LoaderReadyPlayerMe loader_readyplayerme = 1;

        LoaderBlobDownload loader_blob_download = 5;

        LoaderAvaturn loader_avaturn = 11;
    }

    Gender gender = 2;

    string friend_name = 3;

    VoiceConfig voice_config = 4;

    string greeting = 6;

    bytes greeting_wav = 9;

    string description = 7;

    string base_prompts = 8;
}

// AccumulateVoiceMessage sends the short-stop wav messages so we can
// start processing speect_to_text before recording is fully stopped.
// Next tag: 3
message AccumulateVoiceMessageRequest {
    bytes voice_wav = 1;

    // should we send a response indicating the receipt of the message.
    bool inform_receipt = 2;
}

// Next tag: 2
message AccumulateVoiceMessageResponse {
    string transcribed_text = 1;
}
