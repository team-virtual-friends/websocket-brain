// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: ws_message.proto

package virtualfriends_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Next tag: 5
type RuntimeEnv int32

const (
	RuntimeEnv_RuntimeEnv_Invalid         RuntimeEnv = 0
	RuntimeEnv_RuntimeEnv_Webpage_Desktop RuntimeEnv = 1
	RuntimeEnv_RuntimeEnv_Webpage_Mobile  RuntimeEnv = 2
	RuntimeEnv_RuntimeEnv_IOS             RuntimeEnv = 3
	RuntimeEnv_RuntimeEnv_Android         RuntimeEnv = 4
)

// Enum value maps for RuntimeEnv.
var (
	RuntimeEnv_name = map[int32]string{
		0: "RuntimeEnv_Invalid",
		1: "RuntimeEnv_Webpage_Desktop",
		2: "RuntimeEnv_Webpage_Mobile",
		3: "RuntimeEnv_IOS",
		4: "RuntimeEnv_Android",
	}
	RuntimeEnv_value = map[string]int32{
		"RuntimeEnv_Invalid":         0,
		"RuntimeEnv_Webpage_Desktop": 1,
		"RuntimeEnv_Webpage_Mobile":  2,
		"RuntimeEnv_IOS":             3,
		"RuntimeEnv_Android":         4,
	}
)

func (x RuntimeEnv) Enum() *RuntimeEnv {
	p := new(RuntimeEnv)
	*p = x
	return p
}

func (x RuntimeEnv) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuntimeEnv) Descriptor() protoreflect.EnumDescriptor {
	return file_ws_message_proto_enumTypes[0].Descriptor()
}

func (RuntimeEnv) Type() protoreflect.EnumType {
	return &file_ws_message_proto_enumTypes[0]
}

func (x RuntimeEnv) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuntimeEnv.Descriptor instead.
func (RuntimeEnv) EnumDescriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{0}
}

// Next tag: 3
type VoiceType int32

const (
	VoiceType_VoiceType_Invalid       VoiceType = 0
	VoiceType_VoiceType_NormalMale    VoiceType = 1
	VoiceType_VoiceType_NormalFemale1 VoiceType = 2
	VoiceType_VoiceType_NormalFemale2 VoiceType = 3
	VoiceType_VoiceType_Orc           VoiceType = 4
)

// Enum value maps for VoiceType.
var (
	VoiceType_name = map[int32]string{
		0: "VoiceType_Invalid",
		1: "VoiceType_NormalMale",
		2: "VoiceType_NormalFemale1",
		3: "VoiceType_NormalFemale2",
		4: "VoiceType_Orc",
	}
	VoiceType_value = map[string]int32{
		"VoiceType_Invalid":       0,
		"VoiceType_NormalMale":    1,
		"VoiceType_NormalFemale1": 2,
		"VoiceType_NormalFemale2": 3,
		"VoiceType_Orc":           4,
	}
)

func (x VoiceType) Enum() *VoiceType {
	p := new(VoiceType)
	*p = x
	return p
}

func (x VoiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_ws_message_proto_enumTypes[1].Descriptor()
}

func (VoiceType) Type() protoreflect.EnumType {
	return &file_ws_message_proto_enumTypes[1]
}

func (x VoiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoiceType.Descriptor instead.
func (VoiceType) EnumDescriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{1}
}

// Next tag: 3
type Gender int32

const (
	Gender_Gender_Invalid Gender = 0
	Gender_Gender_Male    Gender = 1
	Gender_Gender_Female  Gender = 2
)

// Enum value maps for Gender.
var (
	Gender_name = map[int32]string{
		0: "Gender_Invalid",
		1: "Gender_Male",
		2: "Gender_Female",
	}
	Gender_value = map[string]int32{
		"Gender_Invalid": 0,
		"Gender_Male":    1,
		"Gender_Female":  2,
	}
)

func (x Gender) Enum() *Gender {
	p := new(Gender)
	*p = x
	return p
}

func (x Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_ws_message_proto_enumTypes[2].Descriptor()
}

func (Gender) Type() protoreflect.EnumType {
	return &file_ws_message_proto_enumTypes[2]
}

func (x Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gender.Descriptor instead.
func (Gender) EnumDescriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{2}
}

// Next tag: 15
type VfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*VfRequest_Echo
	//	*VfRequest_StreamReplyMessage
	//	*VfRequest_DownloadAssetBundle
	//	*VfRequest_DownloadBlob
	//	*VfRequest_GetCharacter
	Request    isVfRequest_Request `protobuf_oneof:"request"`
	IpAddr     string              `protobuf:"bytes,8,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	Username   string              `protobuf:"bytes,10,opt,name=username,proto3" json:"username,omitempty"`
	UserId     string              `protobuf:"bytes,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId  string              `protobuf:"bytes,12,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	RuntimeEnv RuntimeEnv          `protobuf:"varint,14,opt,name=runtime_env,json=runtimeEnv,proto3,enum=virtualfriends_proto.RuntimeEnv" json:"runtime_env,omitempty"`
}

func (x *VfRequest) Reset() {
	*x = VfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VfRequest) ProtoMessage() {}

func (x *VfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VfRequest.ProtoReflect.Descriptor instead.
func (*VfRequest) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{0}
}

func (m *VfRequest) GetRequest() isVfRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *VfRequest) GetEcho() *EchoRequest {
	if x, ok := x.GetRequest().(*VfRequest_Echo); ok {
		return x.Echo
	}
	return nil
}

func (x *VfRequest) GetStreamReplyMessage() *StreamReplyMessageRequest {
	if x, ok := x.GetRequest().(*VfRequest_StreamReplyMessage); ok {
		return x.StreamReplyMessage
	}
	return nil
}

func (x *VfRequest) GetDownloadAssetBundle() *DownloadAssetBundleRequest {
	if x, ok := x.GetRequest().(*VfRequest_DownloadAssetBundle); ok {
		return x.DownloadAssetBundle
	}
	return nil
}

func (x *VfRequest) GetDownloadBlob() *DownloadBlobRequest {
	if x, ok := x.GetRequest().(*VfRequest_DownloadBlob); ok {
		return x.DownloadBlob
	}
	return nil
}

func (x *VfRequest) GetGetCharacter() *GetCharacterRequest {
	if x, ok := x.GetRequest().(*VfRequest_GetCharacter); ok {
		return x.GetCharacter
	}
	return nil
}

func (x *VfRequest) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *VfRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *VfRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VfRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *VfRequest) GetRuntimeEnv() RuntimeEnv {
	if x != nil {
		return x.RuntimeEnv
	}
	return RuntimeEnv_RuntimeEnv_Invalid
}

type isVfRequest_Request interface {
	isVfRequest_Request()
}

type VfRequest_Echo struct {
	Echo *EchoRequest `protobuf:"bytes,2,opt,name=echo,proto3,oneof"`
}

type VfRequest_StreamReplyMessage struct {
	StreamReplyMessage *StreamReplyMessageRequest `protobuf:"bytes,6,opt,name=stream_reply_message,json=streamReplyMessage,proto3,oneof"`
}

type VfRequest_DownloadAssetBundle struct {
	DownloadAssetBundle *DownloadAssetBundleRequest `protobuf:"bytes,7,opt,name=download_asset_bundle,json=downloadAssetBundle,proto3,oneof"`
}

type VfRequest_DownloadBlob struct {
	DownloadBlob *DownloadBlobRequest `protobuf:"bytes,9,opt,name=download_blob,json=downloadBlob,proto3,oneof"`
}

type VfRequest_GetCharacter struct {
	GetCharacter *GetCharacterRequest `protobuf:"bytes,13,opt,name=get_character,json=getCharacter,proto3,oneof"`
}

func (*VfRequest_Echo) isVfRequest_Request() {}

func (*VfRequest_StreamReplyMessage) isVfRequest_Request() {}

func (*VfRequest_DownloadAssetBundle) isVfRequest_Request() {}

func (*VfRequest_DownloadBlob) isVfRequest_Request() {}

func (*VfRequest_GetCharacter) isVfRequest_Request() {}

// Next tag: 10
type VfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *CustomError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// Types that are assignable to Response:
	//
	//	*VfResponse_Echo
	//	*VfResponse_StreamReplyMessage
	//	*VfResponse_DownloadAssetBundle
	//	*VfResponse_DownloadBlob
	//	*VfResponse_GetCharacter
	Response isVfResponse_Response `protobuf_oneof:"response"`
}

func (x *VfResponse) Reset() {
	*x = VfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VfResponse) ProtoMessage() {}

func (x *VfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VfResponse.ProtoReflect.Descriptor instead.
func (*VfResponse) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{1}
}

func (x *VfResponse) GetError() *CustomError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (m *VfResponse) GetResponse() isVfResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *VfResponse) GetEcho() *EchoResponse {
	if x, ok := x.GetResponse().(*VfResponse_Echo); ok {
		return x.Echo
	}
	return nil
}

func (x *VfResponse) GetStreamReplyMessage() *StreamReplyMessageResponse {
	if x, ok := x.GetResponse().(*VfResponse_StreamReplyMessage); ok {
		return x.StreamReplyMessage
	}
	return nil
}

func (x *VfResponse) GetDownloadAssetBundle() *DownloadAssetBundleResponse {
	if x, ok := x.GetResponse().(*VfResponse_DownloadAssetBundle); ok {
		return x.DownloadAssetBundle
	}
	return nil
}

func (x *VfResponse) GetDownloadBlob() *DownloadBlobResponse {
	if x, ok := x.GetResponse().(*VfResponse_DownloadBlob); ok {
		return x.DownloadBlob
	}
	return nil
}

func (x *VfResponse) GetGetCharacter() *GetCharacterResponse {
	if x, ok := x.GetResponse().(*VfResponse_GetCharacter); ok {
		return x.GetCharacter
	}
	return nil
}

type isVfResponse_Response interface {
	isVfResponse_Response()
}

type VfResponse_Echo struct {
	Echo *EchoResponse `protobuf:"bytes,2,opt,name=echo,proto3,oneof"`
}

type VfResponse_StreamReplyMessage struct {
	StreamReplyMessage *StreamReplyMessageResponse `protobuf:"bytes,6,opt,name=stream_reply_message,json=streamReplyMessage,proto3,oneof"`
}

type VfResponse_DownloadAssetBundle struct {
	DownloadAssetBundle *DownloadAssetBundleResponse `protobuf:"bytes,7,opt,name=download_asset_bundle,json=downloadAssetBundle,proto3,oneof"`
}

type VfResponse_DownloadBlob struct {
	DownloadBlob *DownloadBlobResponse `protobuf:"bytes,8,opt,name=download_blob,json=downloadBlob,proto3,oneof"`
}

type VfResponse_GetCharacter struct {
	GetCharacter *GetCharacterResponse `protobuf:"bytes,9,opt,name=get_character,json=getCharacter,proto3,oneof"`
}

func (*VfResponse_Echo) isVfResponse_Response() {}

func (*VfResponse_StreamReplyMessage) isVfResponse_Response() {}

func (*VfResponse_DownloadAssetBundle) isVfResponse_Response() {}

func (*VfResponse_DownloadBlob) isVfResponse_Response() {}

func (*VfResponse_GetCharacter) isVfResponse_Response() {}

// Next tag: 2
type CustomError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *CustomError) Reset() {
	*x = CustomError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomError) ProtoMessage() {}

func (x *CustomError) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomError.ProtoReflect.Descriptor instead.
func (*CustomError) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{2}
}

func (x *CustomError) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Next tag: 3
type EchoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text        string       `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	VoiceConfig *VoiceConfig `protobuf:"bytes,2,opt,name=voice_config,json=voiceConfig,proto3" json:"voice_config,omitempty"`
}

func (x *EchoRequest) Reset() {
	*x = EchoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoRequest) ProtoMessage() {}

func (x *EchoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoRequest.ProtoReflect.Descriptor instead.
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{3}
}

func (x *EchoRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *EchoRequest) GetVoiceConfig() *VoiceConfig {
	if x != nil {
		return x.VoiceConfig
	}
	return nil
}

// Next tag: 5
type EchoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text      string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Action    string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Sentiment string `protobuf:"bytes,3,opt,name=sentiment,proto3" json:"sentiment,omitempty"`
	ReplyWav  []byte `protobuf:"bytes,4,opt,name=reply_wav,json=replyWav,proto3" json:"reply_wav,omitempty"`
}

func (x *EchoResponse) Reset() {
	*x = EchoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoResponse) ProtoMessage() {}

func (x *EchoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoResponse.ProtoReflect.Descriptor instead.
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{4}
}

func (x *EchoResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *EchoResponse) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *EchoResponse) GetSentiment() string {
	if x != nil {
		return x.Sentiment
	}
	return ""
}

func (x *EchoResponse) GetReplyWav() []byte {
	if x != nil {
		return x.ReplyWav
	}
	return nil
}

// Next tag: 4
type VoiceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoiceType   VoiceType `protobuf:"varint,1,opt,name=voice_type,json=voiceType,proto3,enum=virtualfriends_proto.VoiceType" json:"voice_type,omitempty"`
	Octaves     float32   `protobuf:"fixed32,2,opt,name=octaves,proto3" json:"octaves,omitempty"`
	ElevenLabId string    `protobuf:"bytes,3,opt,name=eleven_lab_id,json=elevenLabId,proto3" json:"eleven_lab_id,omitempty"`
}

func (x *VoiceConfig) Reset() {
	*x = VoiceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceConfig) ProtoMessage() {}

func (x *VoiceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceConfig.ProtoReflect.Descriptor instead.
func (*VoiceConfig) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{5}
}

func (x *VoiceConfig) GetVoiceType() VoiceType {
	if x != nil {
		return x.VoiceType
	}
	return VoiceType_VoiceType_Invalid
}

func (x *VoiceConfig) GetOctaves() float32 {
	if x != nil {
		return x.Octaves
	}
	return 0
}

func (x *VoiceConfig) GetElevenLabId() string {
	if x != nil {
		return x.ElevenLabId
	}
	return ""
}

// MirroredContent contains the content that is copied from request to response.
// Next tag: 5
type MirroredContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterName string `protobuf:"bytes,1,opt,name=character_name,json=characterName,proto3" json:"character_name,omitempty"`
	MessageId     int64  `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	CharacterId   string `protobuf:"bytes,3,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	ViewerUserId  string `protobuf:"bytes,4,opt,name=viewer_user_id,json=viewerUserId,proto3" json:"viewer_user_id,omitempty"`
}

func (x *MirroredContent) Reset() {
	*x = MirroredContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MirroredContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MirroredContent) ProtoMessage() {}

func (x *MirroredContent) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MirroredContent.ProtoReflect.Descriptor instead.
func (*MirroredContent) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{6}
}

func (x *MirroredContent) GetCharacterName() string {
	if x != nil {
		return x.CharacterName
	}
	return ""
}

func (x *MirroredContent) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *MirroredContent) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *MirroredContent) GetViewerUserId() string {
	if x != nil {
		return x.ViewerUserId
	}
	return ""
}

// Next tag: 10
type StreamReplyMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MirroredContent *MirroredContent `protobuf:"bytes,1,opt,name=mirrored_content,json=mirroredContent,proto3" json:"mirrored_content,omitempty"`
	JsonMessages    []string         `protobuf:"bytes,2,rep,name=json_messages,json=jsonMessages,proto3" json:"json_messages,omitempty"`
	// base_prompts is the prompts that is created by the owner, stored in the DB, and passed to client
	// in GetCharacter request.
	// custom_prompts is the prompts that client overwrite through the custom prompts window.
	// custom_prompts will override base_prompts if it's not empty.
	BasePrompts          string `protobuf:"bytes,8,opt,name=base_prompts,json=basePrompts,proto3" json:"base_prompts,omitempty"`
	CustomPrompts        string `protobuf:"bytes,7,opt,name=custom_prompts,json=customPrompts,proto3" json:"custom_prompts,omitempty"`
	CharacterDescription string `protobuf:"bytes,9,opt,name=character_description,json=characterDescription,proto3" json:"character_description,omitempty"`
	// Types that are assignable to CurrentMessage:
	//
	//	*StreamReplyMessageRequest_Wav
	//	*StreamReplyMessageRequest_Text
	CurrentMessage isStreamReplyMessageRequest_CurrentMessage `protobuf_oneof:"current_message"`
	VoiceConfig    *VoiceConfig                               `protobuf:"bytes,5,opt,name=voice_config,json=voiceConfig,proto3" json:"voice_config,omitempty"`
}

func (x *StreamReplyMessageRequest) Reset() {
	*x = StreamReplyMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamReplyMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamReplyMessageRequest) ProtoMessage() {}

func (x *StreamReplyMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamReplyMessageRequest.ProtoReflect.Descriptor instead.
func (*StreamReplyMessageRequest) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{7}
}

func (x *StreamReplyMessageRequest) GetMirroredContent() *MirroredContent {
	if x != nil {
		return x.MirroredContent
	}
	return nil
}

func (x *StreamReplyMessageRequest) GetJsonMessages() []string {
	if x != nil {
		return x.JsonMessages
	}
	return nil
}

func (x *StreamReplyMessageRequest) GetBasePrompts() string {
	if x != nil {
		return x.BasePrompts
	}
	return ""
}

func (x *StreamReplyMessageRequest) GetCustomPrompts() string {
	if x != nil {
		return x.CustomPrompts
	}
	return ""
}

func (x *StreamReplyMessageRequest) GetCharacterDescription() string {
	if x != nil {
		return x.CharacterDescription
	}
	return ""
}

func (m *StreamReplyMessageRequest) GetCurrentMessage() isStreamReplyMessageRequest_CurrentMessage {
	if m != nil {
		return m.CurrentMessage
	}
	return nil
}

func (x *StreamReplyMessageRequest) GetWav() []byte {
	if x, ok := x.GetCurrentMessage().(*StreamReplyMessageRequest_Wav); ok {
		return x.Wav
	}
	return nil
}

func (x *StreamReplyMessageRequest) GetText() string {
	if x, ok := x.GetCurrentMessage().(*StreamReplyMessageRequest_Text); ok {
		return x.Text
	}
	return ""
}

func (x *StreamReplyMessageRequest) GetVoiceConfig() *VoiceConfig {
	if x != nil {
		return x.VoiceConfig
	}
	return nil
}

type isStreamReplyMessageRequest_CurrentMessage interface {
	isStreamReplyMessageRequest_CurrentMessage()
}

type StreamReplyMessageRequest_Wav struct {
	Wav []byte `protobuf:"bytes,3,opt,name=wav,proto3,oneof"`
}

type StreamReplyMessageRequest_Text struct {
	Text string `protobuf:"bytes,6,opt,name=text,proto3,oneof"`
}

func (*StreamReplyMessageRequest_Wav) isStreamReplyMessageRequest_CurrentMessage() {}

func (*StreamReplyMessageRequest_Text) isStreamReplyMessageRequest_CurrentMessage() {}

// Next tag: 10
type StreamReplyMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MirroredContent *MirroredContent `protobuf:"bytes,6,opt,name=mirrored_content,json=mirroredContent,proto3" json:"mirrored_content,omitempty"`
	ReplyMessage    string           `protobuf:"bytes,1,opt,name=reply_message,json=replyMessage,proto3" json:"reply_message,omitempty"`
	Action          string           `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Sentiment       string           `protobuf:"bytes,3,opt,name=sentiment,proto3" json:"sentiment,omitempty"`
	ReplyWav        []byte           `protobuf:"bytes,4,opt,name=reply_wav,json=replyWav,proto3" json:"reply_wav,omitempty"`
	// will be omitted except the first one.
	TranscribedText string `protobuf:"bytes,5,opt,name=transcribed_text,json=transcribedText,proto3" json:"transcribed_text,omitempty"`
	ChunkIndex      int32  `protobuf:"varint,7,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
	IsStop          bool   `protobuf:"varint,8,opt,name=is_stop,json=isStop,proto3" json:"is_stop,omitempty"`
}

func (x *StreamReplyMessageResponse) Reset() {
	*x = StreamReplyMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamReplyMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamReplyMessageResponse) ProtoMessage() {}

func (x *StreamReplyMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamReplyMessageResponse.ProtoReflect.Descriptor instead.
func (*StreamReplyMessageResponse) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{8}
}

func (x *StreamReplyMessageResponse) GetMirroredContent() *MirroredContent {
	if x != nil {
		return x.MirroredContent
	}
	return nil
}

func (x *StreamReplyMessageResponse) GetReplyMessage() string {
	if x != nil {
		return x.ReplyMessage
	}
	return ""
}

func (x *StreamReplyMessageResponse) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *StreamReplyMessageResponse) GetSentiment() string {
	if x != nil {
		return x.Sentiment
	}
	return ""
}

func (x *StreamReplyMessageResponse) GetReplyWav() []byte {
	if x != nil {
		return x.ReplyWav
	}
	return nil
}

func (x *StreamReplyMessageResponse) GetTranscribedText() string {
	if x != nil {
		return x.TranscribedText
	}
	return ""
}

func (x *StreamReplyMessageResponse) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

func (x *StreamReplyMessageResponse) GetIsStop() bool {
	if x != nil {
		return x.IsStop
	}
	return false
}

// Next tag: 4
// [Deprecated, use DownloadBlobRequest]
//
// Deprecated: Marked as deprecated in ws_message.proto.
type DownloadAssetBundleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublisherName   string `protobuf:"bytes,1,opt,name=publisher_name,json=publisherName,proto3" json:"publisher_name,omitempty"`
	CharacterName   string `protobuf:"bytes,2,opt,name=character_name,json=characterName,proto3" json:"character_name,omitempty"`
	RuntimePlatform string `protobuf:"bytes,3,opt,name=runtime_platform,json=runtimePlatform,proto3" json:"runtime_platform,omitempty"`
}

func (x *DownloadAssetBundleRequest) Reset() {
	*x = DownloadAssetBundleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadAssetBundleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadAssetBundleRequest) ProtoMessage() {}

func (x *DownloadAssetBundleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadAssetBundleRequest.ProtoReflect.Descriptor instead.
func (*DownloadAssetBundleRequest) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{9}
}

func (x *DownloadAssetBundleRequest) GetPublisherName() string {
	if x != nil {
		return x.PublisherName
	}
	return ""
}

func (x *DownloadAssetBundleRequest) GetCharacterName() string {
	if x != nil {
		return x.CharacterName
	}
	return ""
}

func (x *DownloadAssetBundleRequest) GetRuntimePlatform() string {
	if x != nil {
		return x.RuntimePlatform
	}
	return ""
}

// Next tag: 4
// [Deprecated, use DownloadBlobResponse]
//
// Deprecated: Marked as deprecated in ws_message.proto.
type DownloadAssetBundleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk      []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Index      int32  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	TotalCount int32  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *DownloadAssetBundleResponse) Reset() {
	*x = DownloadAssetBundleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadAssetBundleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadAssetBundleResponse) ProtoMessage() {}

func (x *DownloadAssetBundleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadAssetBundleResponse.ProtoReflect.Descriptor instead.
func (*DownloadAssetBundleResponse) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{10}
}

func (x *DownloadAssetBundleResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *DownloadAssetBundleResponse) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *DownloadAssetBundleResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Next tag: 4
type MirroredBlobInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlobName     string `protobuf:"bytes,1,opt,name=blob_name,json=blobName,proto3" json:"blob_name,omitempty"`
	MajorVersion int32  `protobuf:"varint,2,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	MinorVersion int32  `protobuf:"varint,3,opt,name=minor_version,json=minorVersion,proto3" json:"minor_version,omitempty"`
}

func (x *MirroredBlobInfo) Reset() {
	*x = MirroredBlobInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MirroredBlobInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MirroredBlobInfo) ProtoMessage() {}

func (x *MirroredBlobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MirroredBlobInfo.ProtoReflect.Descriptor instead.
func (*MirroredBlobInfo) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{11}
}

func (x *MirroredBlobInfo) GetBlobName() string {
	if x != nil {
		return x.BlobName
	}
	return ""
}

func (x *MirroredBlobInfo) GetMajorVersion() int32 {
	if x != nil {
		return x.MajorVersion
	}
	return 0
}

func (x *MirroredBlobInfo) GetMinorVersion() int32 {
	if x != nil {
		return x.MinorVersion
	}
	return 0
}

// Next tag: 2
type DownloadBlobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MirroredBlobInfo *MirroredBlobInfo `protobuf:"bytes,1,opt,name=mirrored_blob_info,json=mirroredBlobInfo,proto3" json:"mirrored_blob_info,omitempty"`
}

func (x *DownloadBlobRequest) Reset() {
	*x = DownloadBlobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadBlobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadBlobRequest) ProtoMessage() {}

func (x *DownloadBlobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadBlobRequest.ProtoReflect.Descriptor instead.
func (*DownloadBlobRequest) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{12}
}

func (x *DownloadBlobRequest) GetMirroredBlobInfo() *MirroredBlobInfo {
	if x != nil {
		return x.MirroredBlobInfo
	}
	return nil
}

// Next tag: 5
type DownloadBlobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MirroredBlobInfo *MirroredBlobInfo `protobuf:"bytes,1,opt,name=mirrored_blob_info,json=mirroredBlobInfo,proto3" json:"mirrored_blob_info,omitempty"`
	Chunk            []byte            `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Index            int32             `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	TotalCount       int32             `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *DownloadBlobResponse) Reset() {
	*x = DownloadBlobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadBlobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadBlobResponse) ProtoMessage() {}

func (x *DownloadBlobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadBlobResponse.ProtoReflect.Descriptor instead.
func (*DownloadBlobResponse) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{13}
}

func (x *DownloadBlobResponse) GetMirroredBlobInfo() *MirroredBlobInfo {
	if x != nil {
		return x.MirroredBlobInfo
	}
	return nil
}

func (x *DownloadBlobResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *DownloadBlobResponse) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *DownloadBlobResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Next tag: 2
type LoaderReadyPlayerMe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarUrl string `protobuf:"bytes,1,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
}

func (x *LoaderReadyPlayerMe) Reset() {
	*x = LoaderReadyPlayerMe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoaderReadyPlayerMe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoaderReadyPlayerMe) ProtoMessage() {}

func (x *LoaderReadyPlayerMe) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoaderReadyPlayerMe.ProtoReflect.Descriptor instead.
func (*LoaderReadyPlayerMe) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{14}
}

func (x *LoaderReadyPlayerMe) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

// Next tag: 3
type LoaderBlobDownload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlobName           string `protobuf:"bytes,1,opt,name=blob_name,json=blobName,proto3" json:"blob_name,omitempty"`
	InBundleObjectName string `protobuf:"bytes,2,opt,name=in_bundle_object_name,json=inBundleObjectName,proto3" json:"in_bundle_object_name,omitempty"`
}

func (x *LoaderBlobDownload) Reset() {
	*x = LoaderBlobDownload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoaderBlobDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoaderBlobDownload) ProtoMessage() {}

func (x *LoaderBlobDownload) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoaderBlobDownload.ProtoReflect.Descriptor instead.
func (*LoaderBlobDownload) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{15}
}

func (x *LoaderBlobDownload) GetBlobName() string {
	if x != nil {
		return x.BlobName
	}
	return ""
}

func (x *LoaderBlobDownload) GetInBundleObjectName() string {
	if x != nil {
		return x.InBundleObjectName
	}
	return ""
}

// Next tag: 2
type LoaderAvaturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarUrl string `protobuf:"bytes,1,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
}

func (x *LoaderAvaturn) Reset() {
	*x = LoaderAvaturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoaderAvaturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoaderAvaturn) ProtoMessage() {}

func (x *LoaderAvaturn) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoaderAvaturn.ProtoReflect.Descriptor instead.
func (*LoaderAvaturn) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{16}
}

func (x *LoaderAvaturn) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

// Next tag: 2
type GetCharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId string `protobuf:"bytes,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
}

func (x *GetCharacterRequest) Reset() {
	*x = GetCharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterRequest) ProtoMessage() {}

func (x *GetCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterRequest.ProtoReflect.Descriptor instead.
func (*GetCharacterRequest) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{17}
}

func (x *GetCharacterRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

// Next tag: 12
type GetCharacterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneratedSessionId string `protobuf:"bytes,10,opt,name=generated_session_id,json=generatedSessionId,proto3" json:"generated_session_id,omitempty"`
	// Types that are assignable to LoaderConfig:
	//
	//	*GetCharacterResponse_LoaderReadyplayerme
	//	*GetCharacterResponse_LoaderBlobDownload
	//	*GetCharacterResponse_LoaderAvaturn
	LoaderConfig isGetCharacterResponse_LoaderConfig `protobuf_oneof:"loader_config"`
	Gender       Gender                              `protobuf:"varint,2,opt,name=gender,proto3,enum=virtualfriends_proto.Gender" json:"gender,omitempty"`
	FriendName   string                              `protobuf:"bytes,3,opt,name=friend_name,json=friendName,proto3" json:"friend_name,omitempty"`
	VoiceConfig  *VoiceConfig                        `protobuf:"bytes,4,opt,name=voice_config,json=voiceConfig,proto3" json:"voice_config,omitempty"`
	Greeting     string                              `protobuf:"bytes,6,opt,name=greeting,proto3" json:"greeting,omitempty"`
	GreetingWav  []byte                              `protobuf:"bytes,9,opt,name=greeting_wav,json=greetingWav,proto3" json:"greeting_wav,omitempty"`
	Description  string                              `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	BasePrompts  string                              `protobuf:"bytes,8,opt,name=base_prompts,json=basePrompts,proto3" json:"base_prompts,omitempty"`
}

func (x *GetCharacterResponse) Reset() {
	*x = GetCharacterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterResponse) ProtoMessage() {}

func (x *GetCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ws_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterResponse.ProtoReflect.Descriptor instead.
func (*GetCharacterResponse) Descriptor() ([]byte, []int) {
	return file_ws_message_proto_rawDescGZIP(), []int{18}
}

func (x *GetCharacterResponse) GetGeneratedSessionId() string {
	if x != nil {
		return x.GeneratedSessionId
	}
	return ""
}

func (m *GetCharacterResponse) GetLoaderConfig() isGetCharacterResponse_LoaderConfig {
	if m != nil {
		return m.LoaderConfig
	}
	return nil
}

func (x *GetCharacterResponse) GetLoaderReadyplayerme() *LoaderReadyPlayerMe {
	if x, ok := x.GetLoaderConfig().(*GetCharacterResponse_LoaderReadyplayerme); ok {
		return x.LoaderReadyplayerme
	}
	return nil
}

func (x *GetCharacterResponse) GetLoaderBlobDownload() *LoaderBlobDownload {
	if x, ok := x.GetLoaderConfig().(*GetCharacterResponse_LoaderBlobDownload); ok {
		return x.LoaderBlobDownload
	}
	return nil
}

func (x *GetCharacterResponse) GetLoaderAvaturn() *LoaderAvaturn {
	if x, ok := x.GetLoaderConfig().(*GetCharacterResponse_LoaderAvaturn); ok {
		return x.LoaderAvaturn
	}
	return nil
}

func (x *GetCharacterResponse) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_Gender_Invalid
}

func (x *GetCharacterResponse) GetFriendName() string {
	if x != nil {
		return x.FriendName
	}
	return ""
}

func (x *GetCharacterResponse) GetVoiceConfig() *VoiceConfig {
	if x != nil {
		return x.VoiceConfig
	}
	return nil
}

func (x *GetCharacterResponse) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

func (x *GetCharacterResponse) GetGreetingWav() []byte {
	if x != nil {
		return x.GreetingWav
	}
	return nil
}

func (x *GetCharacterResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetCharacterResponse) GetBasePrompts() string {
	if x != nil {
		return x.BasePrompts
	}
	return ""
}

type isGetCharacterResponse_LoaderConfig interface {
	isGetCharacterResponse_LoaderConfig()
}

type GetCharacterResponse_LoaderReadyplayerme struct {
	LoaderReadyplayerme *LoaderReadyPlayerMe `protobuf:"bytes,1,opt,name=loader_readyplayerme,json=loaderReadyplayerme,proto3,oneof"`
}

type GetCharacterResponse_LoaderBlobDownload struct {
	LoaderBlobDownload *LoaderBlobDownload `protobuf:"bytes,5,opt,name=loader_blob_download,json=loaderBlobDownload,proto3,oneof"`
}

type GetCharacterResponse_LoaderAvaturn struct {
	LoaderAvaturn *LoaderAvaturn `protobuf:"bytes,11,opt,name=loader_avaturn,json=loaderAvaturn,proto3,oneof"`
}

func (*GetCharacterResponse_LoaderReadyplayerme) isGetCharacterResponse_LoaderConfig() {}

func (*GetCharacterResponse_LoaderBlobDownload) isGetCharacterResponse_LoaderConfig() {}

func (*GetCharacterResponse_LoaderAvaturn) isGetCharacterResponse_LoaderConfig() {}

var File_ws_message_proto protoreflect.FileDescriptor

var file_ws_message_proto_rawDesc = []byte{
	0x0a, 0x10, 0x77, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x04, 0x0a, 0x09, 0x56, 0x66, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x63, 0x68, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x12,
	0x63, 0x0a, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x12, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x66, 0x0a, 0x15, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x0d,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x50,
	0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0c, 0x67, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x41, 0x0a,
	0x0b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x45, 0x6e, 0x76, 0x52, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76,
	0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10,
	0x02, 0x22, 0x80, 0x04, 0x0a, 0x0a, 0x56, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x04, 0x65, 0x63, 0x68,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x63, 0x68, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x04, 0x65,
	0x63, 0x68, 0x6f, 0x12, 0x64, 0x0a, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x67, 0x0a, 0x15, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62,
	0x6c, 0x6f, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x51, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x0b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x67, 0x0a, 0x0b, 0x45, 0x63, 0x68, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x44, 0x0a, 0x0c, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x75, 0x0a, 0x0c, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x5f, 0x77, 0x61, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x57, 0x61, 0x76, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x0a, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x63, 0x74, 0x61,
	0x76, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6f, 0x63, 0x74, 0x61, 0x76,
	0x65, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x6c, 0x65, 0x76, 0x65, 0x6e, 0x5f, 0x6c, 0x61, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x76, 0x65,
	0x6e, 0x4c, 0x61, 0x62, 0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x0f, 0x4d, 0x69, 0x72, 0x72, 0x6f,
	0x72, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x94, 0x03, 0x0a, 0x19, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x10, 0x6d, 0x69, 0x72, 0x72, 0x6f,
	0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6a, 0x73, 0x6f,
	0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x6a, 0x73, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x03, 0x77, 0x61, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x03, 0x77, 0x61,
	0x76, 0x12, 0x14, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x44, 0x0a, 0x0c, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0b, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x11, 0x0a,
	0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xcb, 0x02, 0x0a, 0x1a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x50, 0x0a, 0x10, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x0f, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x77, 0x61, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x57, 0x61, 0x76, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x70,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x22, 0x99,
	0x01, 0x0a, 0x1a, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x6e, 0x0a, 0x1b, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x79, 0x0a, 0x10, 0x4d, 0x69,
	0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d,
	0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6b, 0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x12,
	0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x10, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0xb9, 0x01, 0x0a, 0x14, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42,
	0x6c, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x12, 0x6d,
	0x69, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x69, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x10, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x34,
	0x0a, 0x13, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x55, 0x72, 0x6c, 0x22, 0x64, 0x0a, 0x12, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x42, 0x6c,
	0x6f, 0x62, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c,
	0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x6c, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x69, 0x6e, 0x5f, 0x62, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x4c, 0x6f,
	0x61, 0x64, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x22, 0x38, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x86, 0x05, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x14, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x5e, 0x0a, 0x14, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x48, 0x00, 0x52, 0x13, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x6d, 0x65, 0x12,
	0x5c, 0x0a, 0x14, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x62, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x12, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x72, 0x42, 0x6c, 0x6f, 0x62, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4c, 0x0a,
	0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61,
	0x64, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x34, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x77, 0x61, 0x76, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x67, 0x72, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x57, 0x61, 0x76, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x42, 0x0f, 0x0a, 0x0d,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2a, 0x8f, 0x01,
	0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x12, 0x16, 0x0a, 0x12,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45,
	0x6e, 0x76, 0x5f, 0x57, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x44, 0x65, 0x73, 0x6b, 0x74,
	0x6f, 0x70, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45,
	0x6e, 0x76, 0x5f, 0x57, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e,
	0x76, 0x5f, 0x49, 0x4f, 0x53, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x45, 0x6e, 0x76, 0x5f, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x10, 0x04, 0x2a,
	0x89, 0x01, 0x0a, 0x09, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a,
	0x11, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4d, 0x61, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x1b,
	0x0a, 0x17, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x6f, 0x72, 0x6d,
	0x61, 0x6c, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x31, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x46,
	0x65, 0x6d, 0x61, 0x6c, 0x65, 0x32, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x72, 0x63, 0x10, 0x04, 0x2a, 0x40, 0x0a, 0x06, 0x47,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x4d, 0x61, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x5f, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x10, 0x02, 0x42, 0x15, 0x5a,
	0x13, 0x2e, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x5f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ws_message_proto_rawDescOnce sync.Once
	file_ws_message_proto_rawDescData = file_ws_message_proto_rawDesc
)

func file_ws_message_proto_rawDescGZIP() []byte {
	file_ws_message_proto_rawDescOnce.Do(func() {
		file_ws_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_ws_message_proto_rawDescData)
	})
	return file_ws_message_proto_rawDescData
}

var file_ws_message_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_ws_message_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_ws_message_proto_goTypes = []interface{}{
	(RuntimeEnv)(0),                     // 0: virtualfriends_proto.RuntimeEnv
	(VoiceType)(0),                      // 1: virtualfriends_proto.VoiceType
	(Gender)(0),                         // 2: virtualfriends_proto.Gender
	(*VfRequest)(nil),                   // 3: virtualfriends_proto.VfRequest
	(*VfResponse)(nil),                  // 4: virtualfriends_proto.VfResponse
	(*CustomError)(nil),                 // 5: virtualfriends_proto.CustomError
	(*EchoRequest)(nil),                 // 6: virtualfriends_proto.EchoRequest
	(*EchoResponse)(nil),                // 7: virtualfriends_proto.EchoResponse
	(*VoiceConfig)(nil),                 // 8: virtualfriends_proto.VoiceConfig
	(*MirroredContent)(nil),             // 9: virtualfriends_proto.MirroredContent
	(*StreamReplyMessageRequest)(nil),   // 10: virtualfriends_proto.StreamReplyMessageRequest
	(*StreamReplyMessageResponse)(nil),  // 11: virtualfriends_proto.StreamReplyMessageResponse
	(*DownloadAssetBundleRequest)(nil),  // 12: virtualfriends_proto.DownloadAssetBundleRequest
	(*DownloadAssetBundleResponse)(nil), // 13: virtualfriends_proto.DownloadAssetBundleResponse
	(*MirroredBlobInfo)(nil),            // 14: virtualfriends_proto.MirroredBlobInfo
	(*DownloadBlobRequest)(nil),         // 15: virtualfriends_proto.DownloadBlobRequest
	(*DownloadBlobResponse)(nil),        // 16: virtualfriends_proto.DownloadBlobResponse
	(*LoaderReadyPlayerMe)(nil),         // 17: virtualfriends_proto.LoaderReadyPlayerMe
	(*LoaderBlobDownload)(nil),          // 18: virtualfriends_proto.LoaderBlobDownload
	(*LoaderAvaturn)(nil),               // 19: virtualfriends_proto.LoaderAvaturn
	(*GetCharacterRequest)(nil),         // 20: virtualfriends_proto.GetCharacterRequest
	(*GetCharacterResponse)(nil),        // 21: virtualfriends_proto.GetCharacterResponse
}
var file_ws_message_proto_depIdxs = []int32{
	6,  // 0: virtualfriends_proto.VfRequest.echo:type_name -> virtualfriends_proto.EchoRequest
	10, // 1: virtualfriends_proto.VfRequest.stream_reply_message:type_name -> virtualfriends_proto.StreamReplyMessageRequest
	12, // 2: virtualfriends_proto.VfRequest.download_asset_bundle:type_name -> virtualfriends_proto.DownloadAssetBundleRequest
	15, // 3: virtualfriends_proto.VfRequest.download_blob:type_name -> virtualfriends_proto.DownloadBlobRequest
	20, // 4: virtualfriends_proto.VfRequest.get_character:type_name -> virtualfriends_proto.GetCharacterRequest
	0,  // 5: virtualfriends_proto.VfRequest.runtime_env:type_name -> virtualfriends_proto.RuntimeEnv
	5,  // 6: virtualfriends_proto.VfResponse.error:type_name -> virtualfriends_proto.CustomError
	7,  // 7: virtualfriends_proto.VfResponse.echo:type_name -> virtualfriends_proto.EchoResponse
	11, // 8: virtualfriends_proto.VfResponse.stream_reply_message:type_name -> virtualfriends_proto.StreamReplyMessageResponse
	13, // 9: virtualfriends_proto.VfResponse.download_asset_bundle:type_name -> virtualfriends_proto.DownloadAssetBundleResponse
	16, // 10: virtualfriends_proto.VfResponse.download_blob:type_name -> virtualfriends_proto.DownloadBlobResponse
	21, // 11: virtualfriends_proto.VfResponse.get_character:type_name -> virtualfriends_proto.GetCharacterResponse
	8,  // 12: virtualfriends_proto.EchoRequest.voice_config:type_name -> virtualfriends_proto.VoiceConfig
	1,  // 13: virtualfriends_proto.VoiceConfig.voice_type:type_name -> virtualfriends_proto.VoiceType
	9,  // 14: virtualfriends_proto.StreamReplyMessageRequest.mirrored_content:type_name -> virtualfriends_proto.MirroredContent
	8,  // 15: virtualfriends_proto.StreamReplyMessageRequest.voice_config:type_name -> virtualfriends_proto.VoiceConfig
	9,  // 16: virtualfriends_proto.StreamReplyMessageResponse.mirrored_content:type_name -> virtualfriends_proto.MirroredContent
	14, // 17: virtualfriends_proto.DownloadBlobRequest.mirrored_blob_info:type_name -> virtualfriends_proto.MirroredBlobInfo
	14, // 18: virtualfriends_proto.DownloadBlobResponse.mirrored_blob_info:type_name -> virtualfriends_proto.MirroredBlobInfo
	17, // 19: virtualfriends_proto.GetCharacterResponse.loader_readyplayerme:type_name -> virtualfriends_proto.LoaderReadyPlayerMe
	18, // 20: virtualfriends_proto.GetCharacterResponse.loader_blob_download:type_name -> virtualfriends_proto.LoaderBlobDownload
	19, // 21: virtualfriends_proto.GetCharacterResponse.loader_avaturn:type_name -> virtualfriends_proto.LoaderAvaturn
	2,  // 22: virtualfriends_proto.GetCharacterResponse.gender:type_name -> virtualfriends_proto.Gender
	8,  // 23: virtualfriends_proto.GetCharacterResponse.voice_config:type_name -> virtualfriends_proto.VoiceConfig
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_ws_message_proto_init() }
func file_ws_message_proto_init() {
	if File_ws_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ws_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EchoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EchoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MirroredContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamReplyMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamReplyMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadAssetBundleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadAssetBundleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MirroredBlobInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadBlobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadBlobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoaderReadyPlayerMe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoaderBlobDownload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoaderAvaturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCharacterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ws_message_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*VfRequest_Echo)(nil),
		(*VfRequest_StreamReplyMessage)(nil),
		(*VfRequest_DownloadAssetBundle)(nil),
		(*VfRequest_DownloadBlob)(nil),
		(*VfRequest_GetCharacter)(nil),
	}
	file_ws_message_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*VfResponse_Echo)(nil),
		(*VfResponse_StreamReplyMessage)(nil),
		(*VfResponse_DownloadAssetBundle)(nil),
		(*VfResponse_DownloadBlob)(nil),
		(*VfResponse_GetCharacter)(nil),
	}
	file_ws_message_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*StreamReplyMessageRequest_Wav)(nil),
		(*StreamReplyMessageRequest_Text)(nil),
	}
	file_ws_message_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*GetCharacterResponse_LoaderReadyplayerme)(nil),
		(*GetCharacterResponse_LoaderBlobDownload)(nil),
		(*GetCharacterResponse_LoaderAvaturn)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ws_message_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ws_message_proto_goTypes,
		DependencyIndexes: file_ws_message_proto_depIdxs,
		EnumInfos:         file_ws_message_proto_enumTypes,
		MessageInfos:      file_ws_message_proto_msgTypes,
	}.Build()
	File_ws_message_proto = out.File
	file_ws_message_proto_rawDesc = nil
	file_ws_message_proto_goTypes = nil
	file_ws_message_proto_depIdxs = nil
}
